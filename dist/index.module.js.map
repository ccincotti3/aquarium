{"version":3,"file":"index.module.js","sources":["../src/models/species.js","../src/models/marlin.js","../src/models/fish.js","../src/models/shark.js","../src/models/stingray.js","../src/index.js"],"sourcesContent":["import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three/build/three.module';\n\nconst loader = new GLTFLoader().setPath('')\n\nexport default class Species {\n    constructor(pos, name, color, metadata) {\n        this.rotationThreshold = 0.0\n        this.rotationTurnFactor = 0.01\n        this.loader = loader\n        this.modelName = name;\n        this.color = color;\n        this.metadata = metadata;\n        this.position = pos || { x: 0, y: 0, z: 0, }\n        this.direction = { // 1 for positive, -1 for negative\n            x: 0,\n            y: 0,\n            z: 1,\n        }\n\n        this.lastMagnitude = 0\n    }\n\n    get boxHelper() {\n        return this.mesh.children.find(c => {\n            return c.type === \"BoxHelper\"\n        })\n    }\n\n    move() {\n            if (!this.loaded) {\n                this.loaded = true;\n                return null;\n            }\n            let vector = new THREE.Vector3()\n            this.mesh.getWorldPosition(vector);\n\n            const magnitude = Math.sqrt(vector.x**2 + vector.y**2 + vector.z**2)\n\n            const vectorToRotate = {}\n\n\n            Object.keys(this.direction).forEach((k) => {\n                    vectorToRotate[k] = Math.abs(vector[k])\n            })\n\n            let max;\n            Object.keys(vectorToRotate).forEach(k => {\n                max = vectorToRotate[max] > vectorToRotate[k] ? max : k\n            })\n\n            const directionToRotationAxis = {\n                'x': 'y',\n                'y': 'x',\n                'z': 'y'\n            }\n            if (magnitude > this.lastMagnitude) {\n                const dir = directionToRotationAxis[max]\n                const turnVel = .0006 * vectorToRotate[max]\n                this.mesh.rotation.x += this.mesh.rotation.x < 0 ? 0.001 : -0.001\n                this.mesh.rotation.y += this.mesh.rotation.y < 0 ? 0.001 : -0.001\n                this.mesh.rotation.z += this.mesh.rotation.z < 0 ? 0.001 : -0.001\n                this.mesh.rotation[dir] +=  dir === \"x\" && this.mesh.position.y < 0 ? -turnVel : turnVel\n            }\n\n            this.lastMagnitude = magnitude\n\n            if (this.mesh.rotation.x < -Math.PI / 2)  {\n                this.mesh.rotation.x = -Math.PI / 2\n            }\n\n            if (this.mesh.rotation.x > Math.PI / 2)  {\n                this.mesh.rotation.x = Math.PI / 2\n            }\n\n            this.mesh.translateX(this.velocity * this.direction.x)\n            this.mesh.translateY(this.velocity * this.direction.y)\n            this.mesh.translateZ(this.velocity * this.direction.z)\n \n        }\n\n    load(cb, errCb) {\n        if(!this.modelName) {\n            throw new Error(\"Please set a file name to load the 3D model\")\n        }\n        this.loader.load(this.modelName, (gltf) => cb(gltf, this), undefined, errCb)\n    }\n}","import Species from \"./species.js\"\n\nconst modelPath = require(\"3d-aquarium/static/models/marlin.glb\")\nexport default class Marlin extends Species {\n    constructor(pos, name, color, metadata) {\n        super()\n        this.color = color;\n        this.metadata = metadata;\n        this.modelName = modelPath\n        this.name = name || 'Marlin'\n        this.position = {\n            x: pos.x,\n            y: pos.y,\n            z: pos.z\n        }\n        this.velocity = 0.003\n        this.loaded = false\n    }\n}","import Species from \"./species.js\"\n\nconst modelPath = require(\"3d-aquarium/static/models/fish.glb\")\n\nexport default class Fish extends Species {\n    constructor(pos, name, color, metadata) {\n        super()\n        this.metadata = metadata;\n        this.modelName = modelPath\n        this.name = name || 'Fish'\n        this.color = color\n        this.position = {\n            x: pos.x,\n            y: pos.y,\n            z: pos.z\n        }\n        this.velocity = 0.005\n        this.rotationTurnFactor = 0.01\n        this.loaded = false\n    }\n}","import Species from \"./species.js\"\n\nconst modelPath = require(\"3d-aquarium/static/models/shark.glb\")\nexport default class Shark extends Species {\n    constructor(pos, name, color, metadata) {\n        super()\n        this.modelName = modelPath\n        this.name = name || 'Shark'\n        this.position = {\n            x: pos.x,\n            y: pos.y,\n            z: pos.z\n        }\n        this.velocity = .0115\n        this.loaded = false\n        this.color = color\n        this.metadata = metadata\n        this.direction = { // 1 for positive, 0 for negative\n            x: 0,\n            y: 0,\n            z: 1,\n        }\n    }\n}","import Species from \"./species.js\"\n\nconst modelPath = require(\"3d-aquarium/static/models/stingray.glb\")\nexport default class Stingray extends Species {\n    constructor(pos, name, color, metadata) {\n        super()\n        this.color = color;\n        this.metadata = metadata;\n        this.modelName = modelPath\n        this.name = name || 'Stingray'\n        this.position = {\n            x: pos.x,\n            y: pos.y,\n            z: pos.z\n        }\n        this.velocity = 0.01\n        this.loaded = false\n    }\n}","import * as THREE from 'three/build/three.module';\nimport { RectAreaLightHelper } from 'three/examples/jsm/helpers/RectAreaLightHelper';\nimport Marlin from './models/marlin.js';\nimport Fish from './models/fish.js';\nimport Shark from './models/shark.js';\nimport Stingray from './models/stingray.js';\nimport { lightShader, vertexShader } from \"./shaders.js\"\n\nconst spritePath = require(\"../static/assets/sprite.png\")\n\nclass Aquarium {\n    constructor(props) {\n        this.container = document.createElement('div')\n        this.container.classList.add('canvas-container');\n        this.container.style.height = \"100%\";\n        document.body.appendChild(this.container);\n\n        this.clock = new THREE.Clock();\n        this.mixers = [] // to hold animation mixers\n        this.fisheys = []\n        this.selectedFish;\n\n        //shader uniforms\n        this.uniforms = {\n            iTime: { value: 0 },\n            iResolution:  { value: new THREE.Vector3() },\n        }\n\n        this.debug = props.debug\n        this.nodes = props.nodes\n        this.onClick = props.onClick\n\n        this.init()\n    }\n    init() {\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n\n        this.scene = new THREE.Scene();\n        this.scene.fog = new THREE.FogExp2(0x1c3c4a, 0.05);\n\n        this.camera = new THREE.PerspectiveCamera(45, width / height, 1, 2000);\n        this.camera.position.set(0, 0, 20);\n        this.camera.lookAt(0, 0, 0);\n        window.addEventListener( 'resize', this.onWindowResize );\n\n        const ambient = new THREE.AmbientLight( 0x707070, 7); // soft white light\n        this.scene.add( ambient )\n\n        var recWidth = 30;\n        var recHeight = 30;\n        var intensity = 1;\n        var rectLight = new THREE.RectAreaLight( 0xffffff, intensity,  recWidth, recHeight );\n        rectLight.position.set( 0, 50, 0 );\n        rectLight.lookAt( 0, 0, 0 );\n        this.scene.add( rectLight )\n\n        //Shader over scene - light shader\n        const lightShaderMaterial = new THREE.ShaderMaterial({\n            fragmentShader: lightShader,\n            vertexShader: vertexShader,\n            uniforms: this.uniforms,\n            depthWrite: false,\n            depthTest: false,\n            transparent: true,\n            // alphaTest: 0.5,\n        })\n\n        const quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), lightShaderMaterial );\n        this.scene.add(quad);\n\n        // Add Renderer\n        this.renderer = new THREE.WebGLRenderer({antialias: true, alpha: true});\n        this.renderer.setClearColor(0x1c3c4a, 0.3)\n        this.renderer.setSize(width, height)\n        this.container.appendChild(this.renderer.domElement)\n\n        if(this.debug){\n            const axesHelper = new THREE.AxesHelper( 20 );\n            const camerahelper = new THREE.CameraHelper( this.camera );\n            const rectLightHelper = new RectAreaLightHelper( rectLight );\n            rectLight.add( rectLightHelper );\n            this.scene.add( camerahelper );\n            this.scene.add( axesHelper );\n        }\n\n        this.loadModels();\n        this.loadInteractiveStuff();\n        requestAnimationFrame(() => this.draw());\n    }\n    draw() {\n        requestAnimationFrame( () => this.draw() )\n        const delta = this.clock.getDelta();\n        this.uniforms.iResolution.value.set(window.innerWidth, window.innerHeight, 1);\n        this.uniforms.iTime.value += delta;\n        if ( this.mixers.length ) { \n            this.mixers.forEach(m => m.update(delta))\n        };\n        if ( this.fisheys.length ) {\n            this.fisheys.forEach(f => f.move())\n        }\n        if(this.pGroup){\n            if(this.pGroup.position.y > 350) {\n                this.pGroup.position.y = -100\n            }\n            this.pGroup.position.y += .1\n        }\n\n        this.handleSelectedFish()\n\n        this.renderer.render(this.scene, this.camera)\n    }\n    loadModels() {\n        const loadCallback = (gltf, object) => {\n            const mixer = new THREE.AnimationMixer(gltf.scene);\n            const clips = gltf.animations\n\n            // Play all animations\n            clips.forEach(( clip ) => mixer.clipAction( clip ).play());\n\n            // Append to mixers\n            this.mixers.push(mixer)\n\n            const box = new THREE.BoxHelper( gltf.scene, 0xffff00 );\n\n            gltf.scene.position.set(object.position.x, object.position.y, object.position.z)\n            if (this.debug) {\n                const axesHelper = new THREE.AxesHelper( 2 );\n                gltf.scene.add(axesHelper)\n            }\n\n            gltf.scene.traverse((o) => {\n                if (o.isMesh) { \n                    o.castShadow = true\n                    o.name = object.name\n                    if(object.color) {\n                        const mesh = new THREE.MeshStandardMaterial({color: object.color});\n                        o.material = mesh\n                    }\n                }\n            });\n            object.mesh = gltf.scene\n\n\n            box.name = object.name\n            box.visible = false;\n            object.mesh.add( box );\n\n            this.fisheys.push(object)\n            this.scene.add( object.mesh );\n        }\n        \n        const errorCallback = (e) => console.log(e)\n        this.nodes.forEach(n => {\n            const initParams = [\n                {x: n.position[0], y: n.position[1], z: n.position[2]}, n.name, n.color, n.metadata\n            ]\n            switch (n.type) {\n                case \"Goldfish\":\n                    return new Fish(...initParams).load(loadCallback, errorCallback);\n                case \"Shark\":\n                    return new Shark(...initParams).load(loadCallback, errorCallback);\n                case \"Stingray\":\n                    return new Stingray(...initParams).load(loadCallback, errorCallback);\n                case \"Marlin\":\n                    return new Marlin(...initParams).load(loadCallback, errorCallback);\n                default:\n                    break;\n            }\n        })\n\n        if (this.debug) {\n            new Fish({x: -3, y: -4, z: 0}, \"Fish 2\").load(loadCallback, errorCallback);\n            new Fish({x: 3, y: -8, z: 0}, \"Fish 3\").load(loadCallback, errorCallback);\n            new Fish({x: 8, y: -4, z: 0}, \"Fish 4\").load(loadCallback, errorCallback);\n            new Fish({x: 0, y: 0, z: 0}, \"Fish 5\").load(loadCallback, errorCallback);\n            new Shark({x: 2, y: 1, z: 0}, \"Shark\").load(loadCallback, errorCallback);\n            new Stingray({x: -2, y: 1, z: 0}, \"Stingray\").load(loadCallback, errorCallback);\n            new Marlin({x: -2, y: 1, z: -5}, \"Marlin\").load(loadCallback, errorCallback);\n        }\n\n        // Bubbles\n        const pGeometry = new THREE.Geometry();\n        const pGroup = new THREE.Object3D();\n        this.pGroup = pGroup\n        this.scene.add(pGroup)\n\n        const tL = new THREE.TextureLoader()\n        const sprite = tL.load(spritePath);\n        for (let i = 0; i < 1400; i++) {\n            var vertex = new THREE.Vector3();\n            vertex.x = 4000 * Math.random() - 2000;\n            vertex.y = -500 + Math.random() * 700;\n            vertex.z = 1200 * Math.random() - 500;\n            pGeometry.vertices.push(vertex);\n        }\n        const material = new THREE.PointsMaterial({\n            size: 10,\n            map: sprite,\n            transparent: true,\n            opacity: 1.0,\n            blending: THREE.AdditiveBlending,\n            alphaTest: 0.5\n        });\n\n        const particles = new THREE.Points(pGeometry, material);\n        particles.sortParticles = true;\n        pGroup.add(particles);\n    }\n\n    onWindowResize = () => {\n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n    }\n\n    onMouseMove = ( event ) => {\n            // calculate mouse position in normalized device coordinates\n            event.preventDefault();\n\n            // (-1 to +1) for both components\n            const rect = this.renderer.domElement.getBoundingClientRect();\n            this.mouse.x = ( ( event.clientX - rect.left ) / rect.width ) * 2 - 1;\n            this.mouse.y = - ( ( event.clientY - rect.top ) / rect.height ) * 2 + 1;\n            // this.mouse.x = ( event.offsetX / this.renderer.domElement.width ) * 2 - 1;\n            // this.mouse.y = -( event.offsetY / this.renderer.domElement.height ) * 2 + 1;\n\n            this.raycaster.setFromCamera( this.mouse, this.camera );\n        \n\n            const meshes = this.fisheys.map(m => m.mesh)\n            const intersects = this.raycaster.intersectObjects( meshes, true );\n            const bodyElement = document.querySelector('body');\n            if(intersects.length) {\n                const fish = this.fisheys.find(f => f.name === intersects[0].object.name);\n                bodyElement.style.cursor = \"pointer\"\n                return this.selectedFish = fish\n            }\n\n            bodyElement.style.cursor = \"unset\"\n            return this.selectedFish = null\n    }\n\n    onMouseDown = ( event, cb ) => {\n        event.preventDefault();\n\n        if(event.target instanceof HTMLCanvasElement === false) {\n            return null;\n        }\n        cb(this.selectedFish)\n    }\n\n    handleSelectedFish() {\n        const domEl = document.getElementById(\"selected\")\n        this.fisheys.forEach(f => f.boxHelper.visible = false)\n        if(!this.selectedFish) {\n            domEl.innerHTML = ''\n            return null\n        }\n        domEl.innerHTML = this.selectedFish.name \n\n        this.selectedFish.boxHelper.visible = true\n    }\n\n    loadInteractiveStuff = () => {\n        this.raycaster = new THREE.Raycaster();\n        this.mouse = new THREE.Vector2();\n       \n        window.addEventListener( 'mousemove', this.onMouseMove, false );\n        window.addEventListener( 'mousedown', (e) => this.onMouseDown(e, this.onClick), false );\n    }\n}\n\nwindow.Aquarium = Aquarium\nexport default Aquarium"],"names":["loader","GLTFLoader","setPath","Species","pos","name","color","metadata","this","rotationThreshold","rotationTurnFactor","modelName","position","x","y","z","direction","lastMagnitude","move","loaded","vector","THREE","mesh","getWorldPosition","max","magnitude","Math","sqrt","vectorToRotate","Object","keys","forEach","k","abs","dir","turnVel","rotation","PI","translateX","velocity","translateY","translateZ","load","cb","errCb","Error","gltf","_this","undefined","children","find","c","type","modelPath","require","Marlin","Fish","Shark","Stingray","spritePath","Aquarium","props","onWindowResize","camera","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","renderer","setSize","onMouseMove","event","preventDefault","rect","domElement","getBoundingClientRect","mouse","clientX","left","width","clientY","top","height","raycaster","setFromCamera","meshes","fisheys","map","m","intersects","intersectObjects","bodyElement","document","querySelector","length","fish","f","object","style","cursor","selectedFish","onMouseDown","target","HTMLCanvasElement","loadInteractiveStuff","addEventListener","e","onClick","container","createElement","classList","add","body","appendChild","clock","mixers","uniforms","iTime","value","iResolution","debug","nodes","init","scene","fog","set","lookAt","ambient","rectLight","lightShaderMaterial","fragmentShader","vertexShader","depthWrite","depthTest","transparent","quad","antialias","alpha","setClearColor","axesHelper","camerahelper","rectLightHelper","RectAreaLightHelper","loadModels","requestAnimationFrame","_this2","draw","_this3","delta","getDelta","update","pGroup","handleSelectedFish","render","loadCallback","mixer","animations","clip","clipAction","play","_this4","push","box","traverse","o","isMesh","castShadow","material","visible","errorCallback","console","log","n","initParams","pGeometry","sprite","i","vertex","random","vertices","size","opacity","blending","alphaTest","particles","sortParticles","domEl","getElementById","boxHelper","innerHTML"],"mappings":"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"}